{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "97f4718a-fc95-48d7-8651-2a147894c16e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-05-02 19:37:59.784 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run C:\\Users\\Alex\\carpetaraiz\\Lib\\site-packages\\ipykernel_launcher.py [ARGUMENTS]\n"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "from langchain import PromptTemplate\n",
    "from langchain_openai import OpenAI\n",
    "\n",
    "\n",
    "template = \"\"\"\n",
    "    Below is a draft text that may be poorly worded.\n",
    "    Your goal is to:\n",
    "    - Properly redact the draft text\n",
    "    - Convert the draft text to a specified tone\n",
    "    - Convert the draft text to a specified dialect\n",
    "\n",
    "    Here are some examples different Tones:\n",
    "    - Formal: Greetings! OpenAI has announced that Sam Altman is rejoining the company as its Chief Executive Officer. After a period of five days of conversations, discussions, and deliberations, the decision to bring back Altman, who had been previously dismissed, has been made. We are delighted to welcome Sam back to OpenAI.\n",
    "    - Informal: Hey everyone, it's been a wild week! We've got some exciting news to share - Sam Altman is back at OpenAI, taking up the role of chief executive. After a bunch of intense talks, debates, and convincing, Altman is making his triumphant return to the AI startup he co-founded.  \n",
    "\n",
    "    Here are some examples of words in different dialects:\n",
    "    - American: French Fries, cotton candy, apartment, garbage, \\\n",
    "        cookie, green thumb, parking lot, pants, windshield\n",
    "    - British: chips, candyfloss, flag, rubbish, biscuit, green fingers, \\\n",
    "        car park, trousers, windscreen\n",
    "\n",
    "    Example Sentences from each dialect:\n",
    "    - American: Greetings! OpenAI has announced that Sam Altman is rejoining the company as its Chief Executive Officer. After a period of five days of conversations, discussions, and deliberations, the decision to bring back Altman, who had been previously dismissed, has been made. We are delighted to welcome Sam back to OpenAI.\n",
    "    - British: On Wednesday, OpenAI, the esteemed artificial intelligence start-up, announced that Sam Altman would be returning as its Chief Executive Officer. This decisive move follows five days of deliberation, discourse and persuasion, after Altman's abrupt departure from the company which he had co-established.\n",
    "\n",
    "    Please start the redaction with a warm introduction. Add the introduction \\\n",
    "        if you need to.\n",
    "    \n",
    "    Below is the draft text, tone, and dialect:\n",
    "    DRAFT: {draft}\n",
    "    TONE: {tone}\n",
    "    DIALECT: {dialect}\n",
    "\n",
    "    YOUR {dialect} RESPONSE:\n",
    "\"\"\"\n",
    "\n",
    "#PromptTemplate variables definition\n",
    "prompt = PromptTemplate(\n",
    "    input_variables=[\"tone\", \"dialect\", \"draft\"],\n",
    "    template=template,\n",
    ")\n",
    "\n",
    "\n",
    "#LLM and key loading function\n",
    "def load_LLM(openai_api_key):\n",
    "    \"\"\"Logic for loading the chain you want to use should go here.\"\"\"\n",
    "    # Make sure your openai_api_key is set as an environment variable\n",
    "    llm = OpenAI(temperature=.7, openai_api_key=openai_api_key)\n",
    "    return llm\n",
    "\n",
    "\n",
    "#Page title and header\n",
    "st.set_page_config(page_title=\"Re-write your text\")\n",
    "st.header(\"Re-write your text\")\n",
    "\n",
    "\n",
    "#Intro: instructions\n",
    "col1, col2 = st.columns(2)\n",
    "\n",
    "with col1:\n",
    "    st.markdown(\"Re-write your text in different styles.\")\n",
    "\n",
    "with col2:\n",
    "    st.write(\"Contact with [AI Accelera](https://aiaccelera.com) to build your AI Projects\")\n",
    "\n",
    "\n",
    "#Input OpenAI API Key\n",
    "st.markdown(\"## Enter Your OpenAI API Key\")\n",
    "\n",
    "def get_openai_api_key():\n",
    "    input_text = st.text_input(label=\"OpenAI API Key \",  placeholder=\"Ex: sk-2twmA8tfCb8un4...\", key=\"openai_api_key_input\", type=\"password\")\n",
    "    return input_text\n",
    "\n",
    "openai_api_key = get_openai_api_key()\n",
    "\n",
    "\n",
    "# Input\n",
    "st.markdown(\"## Enter the text you want to re-write\")\n",
    "\n",
    "def get_draft():\n",
    "    draft_text = st.text_area(label=\"Text\", label_visibility='collapsed', placeholder=\"Your Text...\", key=\"draft_input\")\n",
    "    return draft_text\n",
    "\n",
    "draft_input = get_draft()\n",
    "\n",
    "if len(draft_input.split(\" \")) > 700:\n",
    "    st.write(\"Please enter a shorter text. The maximum length is 700 words.\")\n",
    "    st.stop()\n",
    "\n",
    "# Prompt template tunning options\n",
    "col1, col2 = st.columns(2)\n",
    "with col1:\n",
    "    option_tone = st.selectbox(\n",
    "        'Which tone would you like your redaction to have?',\n",
    "        ('Formal', 'Informal'))\n",
    "    \n",
    "with col2:\n",
    "    option_dialect = st.selectbox(\n",
    "        'Which English Dialect would you like?',\n",
    "        ('American', 'British'))\n",
    "    \n",
    "    \n",
    "# Output\n",
    "st.markdown(\"### Your Re-written text:\")\n",
    "\n",
    "if draft_input:\n",
    "    if not openai_api_key:\n",
    "        st.warning('Please insert OpenAI API Key. \\\n",
    "            Instructions [here](https://help.openai.com/en/articles/4936850-where-do-i-find-my-secret-api-key)', \n",
    "            icon=\"⚠️\")\n",
    "        st.stop()\n",
    "\n",
    "    llm = load_LLM(openai_api_key=openai_api_key)\n",
    "\n",
    "    prompt_with_draft = prompt.format(\n",
    "        tone=option_tone, \n",
    "        dialect=option_dialect, \n",
    "        draft=draft_input\n",
    "    )\n",
    "\n",
    "    improved_redaction = llm(prompt_with_draft)\n",
    "\n",
    "    st.write(improved_redaction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ba745e14-7991-410d-b2bd-1e64537e1b03",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

python mi_script.py
streamlit run C:\Users\Alex\carpetaraiz\Lib\site-packages\ipykernel_launcher.py [aplicacionprueba]

